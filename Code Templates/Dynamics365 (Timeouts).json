{"id":100002,"name":"Dynamics365 (Timeouts)","mergeCode":true,"type":"PageObject","language":"CSharp","languageExtension":".cs","builtIn":false,"items":[{"id":164,"name":"PageObjectClassTemplate","code":"using Microsoft.Dynamics365.UIAutomation.Api.UCI;\nusing Microsoft.Dynamics365.UIAutomation.Browser;\nusing OpenQA.Selenium;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing OpenQA.Selenium.Interactions;\n\nnamespace Pages\n{\n    public class {{{ModuleName}}} : BasePage\n    {\n        public {{{ModuleName}}} (WebClient driver)\n            : base(driver)\n        {\n        }\n\n        //Region - Identifiers\n        //EndRegion - Identifiers\n\n        //Region - Methods\n        //EndRegion - Method\n    }\n}","functionParameters":[],"templateId":100002},{"id":165,"name":"PageObjectdentifierTemplate_Id","code":"\tprivate By {{{ObjectName}}} = By.Id(\"{{{ObjectIdentifier}}}\");\n","functionParameters":[],"templateId":100002},{"id":166,"name":"PageObjectdentifierTemplate_XPath","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"{{{ObjectIdentifier}}}\");\n","functionParameters":[],"templateId":100002},{"id":167,"name":"PageObjectdentifierTemplate_TagName","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//{{{ObjectIdentifier}}}\");\n","functionParameters":[],"templateId":100002},{"id":168,"name":"PageObjectdentifierTemplate_ClassName","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//*[@class='{{{ObjectIdentifier}}}']\");\n","functionParameters":[],"templateId":100002},{"id":169,"name":"PageObjectdentifierTemplate_Name","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//*[@name='{{{ObjectIdentifier}}}']\");\n","functionParameters":[],"templateId":100002},{"id":170,"name":"PageObjectdentifierTemplate_LinkText","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//*[text()='{{{ObjectIdentifier}}}']\");\n","functionParameters":[],"templateId":100002},{"id":171,"name":"PageObjectdentifierTemplate_PartialLinkText","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//*[contains(text(),'{{{ObjectIdentifier}}}')]\");\n","functionParameters":[],"templateId":100002},{"id":172,"name":"PageObjectdentifierTemplate_AccesibilityId","code":"\tprivate By {{{ObjectName}}} = By.XPath(\"//*[@name='{{{ObjectIdentifier}}}']\");\n","functionParameters":[],"templateId":100002},{"id":173,"name":"TestCaseMethodTemplate_Url","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n  \tpublic void GoToUrl()\n  \t{\n  \t\t_client.Browser.Driver.Url = \"{{{url}}}\";\n  \t}\n","functionParameters":[],"templateId":100002},{"id":174,"name":"TestCaseMethodTemplate_Documentation","functionParameters":[],"templateId":100002},{"id":175,"name":"TestCaseMethodTemplate_DocumentationParameter","functionParameters":[],"templateId":100002},{"id":176,"name":"TestCaseMethodTemplate_Unknown","functionParameters":[],"templateId":100002},{"id":177,"name":"TestCaseMethodTemplate_AssertUrl","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n      public void AssertUrl()\n      {\n          String currentUrl = _client.Browser.Driver.Url;\n\n          if (!currentUrl.Equals(\"{{{url}}}\")) {\n              throw new Exception(\"Expecting URL - {{{url}}} - Found \" + currentUrl);\n          }\n      }\n","functionParameters":[],"templateId":100002},{"id":178,"name":"TestCaseMethodTemplate_Click","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n  \tpublic void {{{FunctionName}}}()\n  \t{\n  \t\tIWebElement elem = getWebElement({{{ObjectName}}});\n\n  \t\tif (elem == null) {\n  \t\t\tthrow new Exception(\"Unable to locate object: \" + {{{ObjectName}}}.ToString());\n  \t\t}\n\n  \t\telem.Click();\n  \t}\n","functionParameters":[],"templateId":100002},{"id":179,"name":"TestCaseMethodTemplate_Select","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n  \tpublic void {{{FunctionName}}}(String {{{ParameterName}}})\n  \t{\n  \t\tIWebElement elem = getWebElement({{{ObjectName}}});\n\n  \t\tif (elem == null) {\n  \t\t\tthrow new Exception(\"Unable to locate object: \" + {{{ObjectName}}}.ToString());\n  \t\t}\n\n  \t\tSelectElement dropdown = new SelectElement(elem);\n\n  \t\tdropdown.SelectByText({{{ParameterName}}});\n  \t}\n","functionParameters":[],"templateId":100002},{"id":180,"name":"TestCaseMethodTemplate_SendKeys","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n  \tpublic void {{{FunctionName}}}(String {{{ParameterName}}})\n  \t{\n  \t\tIWebElement elem = getWebElement({{{ObjectName}}});\n\n  \t\tif (elem == null) {\n  \t\t\tthrow new Exception(\"Unable to locate object: \" + {{{ObjectName}}}.ToString());\n  \t\t}\n\n  \t\telem.SendKeys({{{ParameterName}}});\n  \t}\n","functionParameters":[],"templateId":100002},{"id":181,"name":"TestCaseMethodTemplate_AssertExists","code":"    //Region - MethodDocumentation\n      //EndRegion - MethodDocumentation\n  \tpublic void {{{FunctionName}}}()\n  \t{\n  \t\tIWebElement elem = getWebElement({{{ObjectName}}});\n\n  \t\tif (elem == null) {\n  \t\t\tthrow new Exception(\"Unable to locate object: \" + {{{ObjectName}}}.ToString());\n  \t\t}\n  \t}\n","functionParameters":[],"templateId":100002},{"id":182,"name":"TestCaseMethodTemplate_CustomType","code":"    //Region - MethodDocumentation\n    //EndRegion - MethodDocumentation\n  \tpublic void {{{FunctionName}}}()\n  \t{\n  \t\tIWebElement elem = getWebElement({{{ObjectName}}});\n\n  \t\tif (elem == null) {\n  \t\t\tthrow new Exception(\"Unable to locate object: \" + {{{ObjectName}}}.ToString());\n  \t\t}\n\n        Actions action = new Actions(_client.Browser.Driver);\n        action.MoveToElement(elem).Perform();\n  \t}\n  \t","functionName":"Hover","functionParameters":[],"templateId":100002}]}